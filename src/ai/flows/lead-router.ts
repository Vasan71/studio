// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview An AI assistant that scans new lead requests, identifies relevant keywords,
 * and recommends team members best suited to handle the request.
 *
 * - routeLead - A function that routes a lead based on the request content.
 * - RouteLeadInput - The input type for the routeLead function.
 * - RouteLeadOutput - The return type for the routeLead function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const RouteLeadInputSchema = z.object({
  requestContent: z
    .string()
    .describe('The content of the lead request, including the services they are interested in.'),
});
export type RouteLeadInput = z.infer<typeof RouteLeadInputSchema>;

const RouteLeadOutputSchema = z.object({
  recommendedTeamMembers: z
    .array(z.string())
    .describe('An array of team member names who are best suited to handle the request.'),
  reasoning: z
    .string()
    .describe('The AI reasoning for recommending these team members.'),
});
export type RouteLeadOutput = z.infer<typeof RouteLeadOutputSchema>;

export async function routeLead(input: RouteLeadInput): Promise<RouteLeadOutput> {
  return routeLeadFlow(input);
}

const prompt = ai.definePrompt({
  name: 'routeLeadPrompt',
  input: {schema: RouteLeadInputSchema},
  output: {schema: RouteLeadOutputSchema},
  prompt: `You are an AI assistant responsible for routing new lead requests to the appropriate team members. Your primary function is to analyze the user's request and recommend team members based on their specializations.

You MUST provide your response as a valid JSON object that strictly adheres to the provided output schema. Do not add any extra text or explanations outside of the JSON structure.

## Team Members and Specializations:
- John: Specializes in Facebook Ads and Google Ads.
- Jane: Specializes in Google My Business (GMB) and SEO.
- Alice: Specializes in Website Creation and Design.
- Bob: Specializes in AI Automation and Chat Automation.

## Your Task:
1. Carefully analyze the "Request Content" provided by the user.
2. Identify the key services being requested (e.g., 'Facebook Ads', 'website creation').
3. Match these services to the team members listed above who specialize in them.
4. Construct a JSON object with two keys: 'recommendedTeamMembers' and 'reasoning'.
5. The 'recommendedTeamMembers' key must be an array of strings, containing the names of the matched team members.
6. The 'reasoning' key must be a string explaining your choice.

## Example:
If the request is "I need help with my local business's SEO and also want to create a new website.", your response should be:
{
  "recommendedTeamMembers": ["Jane", "Alice"],
  "reasoning": "The user requires assistance with SEO, which is Jane's specialty, and also needs a new website, which is Alice's area of expertise."
}

## Request Content:
{{{requestContent}}}
  `,
});

const routeLeadFlow = ai.defineFlow(
  {
    name: 'routeLeadFlow',
    inputSchema: RouteLeadInputSchema,
    outputSchema: RouteLeadOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    if (!output) {
      throw new Error('AI service returned an empty response.');
    }
    return output;
  }
);
