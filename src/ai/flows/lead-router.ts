// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview An AI assistant that scans new lead requests, identifies relevant keywords,
 * and recommends team members best suited to handle the request.
 *
 * - routeLead - A function that routes a lead based on the request content.
 * - RouteLeadInput - The input type for the routeLead function.
 * - RouteLeadOutput - The return type for the routeLead function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const RouteLeadInputSchema = z.object({
  requestContent: z
    .string()
    .describe('The content of the lead request, including the services they are interested in.'),
});
export type RouteLeadInput = z.infer<typeof RouteLeadInputSchema>;

const RouteLeadOutputSchema = z.object({
  recommendedTeamMembers: z
    .array(z.string())
    .describe('An array of team member names who are best suited to handle the request.'),
  reasoning: z
    .string()
    .describe('The AI reasoning for recommending these team members.'),
});
export type RouteLeadOutput = z.infer<typeof RouteLeadOutputSchema>;

export async function routeLead(input: RouteLeadInput): Promise<RouteLeadOutput> {
  return routeLeadFlow(input);
}

const prompt = ai.definePrompt({
  name: 'routeLeadPrompt',
  input: {schema: RouteLeadInputSchema},
  output: {schema: RouteLeadOutputSchema},
  prompt: `You are an AI assistant responsible for routing new lead requests to the appropriate team members.

  Analyze the lead request content and identify relevant keywords related to our services, such as 'Facebook Ads,' 'Google My Business,' 'AI automation,' 'website creation', etc.

  Based on the identified keywords, recommend the team members who are best suited to handle the request. Provide a brief explanation for each recommendation.

  Team Members:
  - John (Facebook Ads, Google Ads)
  - Jane (Google My Business, SEO)
  - Alice (Website Creation, Design)
  - Bob (AI Automation, Chat Automation)

  Request Content: {{{requestContent}}}

  Respond with a JSON object that conforms to the output schema.
  `,
});

const routeLeadFlow = ai.defineFlow(
  {
    name: 'routeLeadFlow',
    inputSchema: RouteLeadInputSchema,
    outputSchema: RouteLeadOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
